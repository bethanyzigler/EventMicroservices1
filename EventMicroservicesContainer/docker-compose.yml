version: '3.4'

networks:
  frontend:
  backend:

services:
  webmvc:
    build: 
      context: .\WebMvc
      dockerfile: Dockerfile
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      CatalogUrl: http://eventcatalog 
      IdentityUrl: http://10.0.0.200:5025
      CartUrl: http://cart 
      OrderUrl: http://order  
    container_name: webshop
    ports:
      - "5300:80"
    networks:
      - frontend
    depends_on:
      - eventcatalog  
      - tokenserver      
      - cart
      - order

  eventcatalog:
    build:
      context: .\EventCatalogAPI
      dockerfile: Dockerfile
    image: events/eventsbritecatalogapi    
    environment:
      DatabaseServer: mssqlserver
      DatabaseName: EventCatalogDB
      DatabaseUser: sa
      DatabaseUserPassword: EventApi(!)
    container_name: eventsbritecatalogapi
    ports:
      - "5049:80"
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  tokenserver:
    build: 
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    environment: 
      ASPNETCORE_ENVIRONMENT: Development 
      MvcClient: http://localhost:5300  
      BasketApiClient: http://localhost:5055
      OrderApiClient: http://localhost:5605
    container_name: tokenserviceeventapi
    ports:
      - "5025:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - mssqlserver


  cart:
    image: cartimage
    build: 
      context: .\CartApi
      dockerfile: Dockerfile
    environment: 
      ASPNETCORE_ENVIRONMENT: Development 
      IdentityUrl: http://tokenserver
    container_name: cartapi
    ports:
      - "5055:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - basket.data
      - tokenserver
      - rabbitmq

  order:
    image: events/order
    build: 
      context: .\OrderApi
      dockerfile: Dockerfile
    
    environment: 
      ASPNETCORE_ENVIRONMENT: Development 
      IdentityUrl: http://tokenserver
      SQLSERVER_HOST: mssqlcontainer2
      SA_PASSWORD: EventApi(!)
      DATABASE: OrdersDb
    container_name: orderapi
    ports:
      - "5605:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - mssqlserver
      - tokenserver 
      - rabbitmq

  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    ports:
      - "1449:1433"

    container_name: mssqlcontainer3
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: EventApi(!)
    networks:
      - backend


  basket.data:
    image: redis
    ports:
      - "6378:6379"  
    networks:
      - backend 

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: myrabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    volumes:
      - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
    networks:
      - backend 

